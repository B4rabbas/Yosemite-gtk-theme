// based css:
// https://github.com/budgie-desktop/budgie-desktop/tree/master/src/theme

/******************
 * Budgie Desktop *
 ******************/
// Container for both the "panel" area and the shadow. Wise to keep
// this transparent..

%budgiebutton.flat {
  @include button(flat-normal);
  &:hover { @include button(flat-hover); }
  &:checked { @include button(flat-checked); }
  &:active { @include button(flat-active); }
  &:disabled { @include button(flat-insensitive); }
}

.budgie-container { background-color: transparent; }

.budgie-settings-window buttonbox.inline-toolbar {
  border-style: none none solid;

  button {
    border-radius: $bt_radius;
    -gtk-outline-radius: $bt_radius;

    @extend %budgiebutton.flat;
  }
}

.budgie-popover {
  margin: 0;
  padding: 0;
  border: 1px solid $borders_color;
  border-radius: $wm_radius;
  box-shadow: 0 1px 2px 0 if($variant == 'light', opacify($_wm_border, 0.15), opacify($_wm_border, 0.1)),
              0 2px 3px 0 if($variant == 'light', opacify($_wm_border, 0.15), opacify($_wm_border, 0.1));

  background-color: rgba($bg_color, 0.95);

  .container { padding: 2px; }

  border { border: none; }

  list { background-color: transparent; }

  row {
    padding: 0;
    background-color: transparent;

    &:hover { box-shadow: none; background-color: transparent; }
  }

  &:not(.budgie-menu) button.flat:not(.image-button) {
    @extend %budgiebutton.flat;
    min-height: 28px;
    padding: 0 8px;
    color: $fg_color;
    font-weight: normal;

    &:disabled { color: $insensitive_fg_color; }
  }

  &.budgie-menu {
    .container { padding: 0; }
  }

  &.user-menu {
    .container { padding: 8px; }

    separator { margin: 4px 0; }
  }

  &.sound-popover {
    separator { margin: 3px 0; }
  }

  &.night-light-indicator {
    .container { padding: 8px; }
  }

  &.places-menu {
    .container { padding: 8px; }

    .places-list:not(.always-expand) {
      margin-top: 4px;
      padding-top: 4px;
      border-top: 1px solid $borders_color;
    }

    // I guess this really should be hard-coded as well as other dim-labels.
    .alternative-label {
      padding: 3px;
      font-size: 15px;
    }
  }

  &.workspace-popover {
    .container { padding: 2px 8px 8px; }

    separator { margin: 4px 0; }

    flowboxchild { padding: 0; }
  }
}

// FIXME: workspace has unnecessary/unknown margin
.workspace-switcher {
  .workspace-layout {
    border: 0 solid rgba(white, 0.12);

    .top &,
    .bottom & {
      &:dir(ltr) { border-left-width: 1px; }

      &:dir(rtl) { border-right-width: 1px; }
    }

    .left &,
    .right & { border-top-width: 1px; }
  }

  .workspace-item,
  .workspace-add-button {
    border: 0 solid rgba(white, 0.12);

    .top &,
    .bottom & {
      &:dir(ltr) { border-right-width: 1px; }

      &:dir(rtl) { border-left-width: 1px; }
    }

    .left &,
    .right & { border-bottom-width: 1px; }
  }

  .workspace-item {
    transition: $transition_2;

    &.current-workspace { background-color: rgba(white, 0.12); }
  }

  .workspace-add-button {
    background-color: transparent;
    background-image: none;
    @extend %budgiebutton.flat;

    &:hover { box-shadow: none; }

    &:active { background-image: none; }

    &:active image { margin: 1px 0 -1px; }
  }

  .workspace-icon-button {
    .budgie-panel & { // to overwrite the .budgie-panel button style below
      min-height: 24px;
      min-width: 24px;
      padding: 0;
      border-radius: $bt_radius;
    }
  }
}

// Budgie Menu
.budgie-menu {
  &.background {
    padding: 0;
    background-color: $base_color;
  }

  scrollbar,
  entry.search { background-color: transparent; }

  entry.search {
//    margin: 6px 6px 0 6px;
    border: none;
    border-bottom: 1px solid $borders_color;
    border-radius: 0;
    box-shadow: none;
    font-size: 120%;
//    &:focus { @include entry(focus); }
  }

  .categories {
    &:dir(ltr) { border-bottom-left-radius: $bt_radius; }

    &:dir(rtl) { border-bottom-right-radius: $bt_radius; }
  }

  button {
    @extend row.activatable;

    min-height: 32px;
    padding: 0 8px;
    border-radius: 0;
    color: $fg_color;
    font-weight: normal;
    border: none;

    &:disabled { color: $insensitive_fg_color; }

    &:checked { @extend %selected_items; }

    &:checked:disabled { background-color: $selected_bg_color; } // overriding
  }

  row {
    padding: 0;

    &:hover { box-shadow: none; }
  }
}

// Menu Button
button.budgie-menu-launcher {
  // padding: 0 2px;
  @extend button.flat;
}

// User Menu
popover.background.user-menu {
  padding: 8px;

  .content-box { background-color: transparent; }

  separator { margin: 4px 0; }

  row {
    padding: 0;
    box-shadow: none;
    background-image: none;
  }
}

// Raven Trigger
button.raven-trigger {
  // padding: 0 4px;
}

// Places Menu
popover.background.places-menu {
  padding: 8px;

  // FIXME: untested
  .message-bar {
    // margin-bottom: 4px;
  }

  .name-button.text-button {
    // padding: 4px 8px;
    padding-left: 8px;
    padding-right: 8px;

    image {
      &:dir(ltr) { margin-right: 8px - 5px; }
      &:dir(rtl) { margin-left: 8px - 5px; }
    }
  }

  // FIXME: untested
  .unmount-button {
    // padding: ($medium_size - 24px) / 2;
  }

  .places-section-header > image {
    &:dir(ltr) { margin: 0 8px - 10px 0 8px - 3px; }
    &:dir(rtl) { margin: 0 8px - 3px 0 8px - 10px; }
  }

  .places-list {
    margin-top: 4px;
    padding-top: 4px;
    border-top: 1px solid $borders_color;
    background-color: transparent;
  }

  row {
    padding: 0;
    box-shadow: none;
    background-image: none;
  }

  // FIXME: untested
  .unlock-area {
    entry {
    }

    button {
    }
  }
}

// Panel
.budgie-panel {
  transition: background-color 0.2s cubic-bezier(0, 0, 0.2, 1);
  background-color: $header_bg;
  color: $header_fg;
  font-weight: 500;

  &.transparent { background-color: rgba($header_bg, 0.65); }

  button {
    min-height: 16px;
    min-width: 16px;
    padding: 0;
    border-radius: 0;
    color: $header_fg;
    border-top-width: 0;
    border-bottom-width: 0;
    border: none;

    &:checked { background-color: rgba($header_fg, 0.12); }
  }

  &.horizontal button { padding: 0 4px; }

  &.vertical button { padding: 4px 0; }

  separator { background-color: $borders_color; }

  // Budgie styled Gtk Menus
  menubar,
  .menubar {
    box-shadow: none;
    color: $header_fg;
    background-image: none;
    background-color: transparent;

    > menuitem {
      border: none;
      background-image: none;

      &:hover {
        background-color: $selected_bg_color;
      }
      &:disabled {
        color: transparentize($header_fg, 0.6);
      }
    }
  }

  // used to indicate unread notifications
  .alert { color: $destructive_color; }

  // End Section needs to be fancy
  .end-region {
    // background-color: rgba(0,0,0,0.2);
  }

  // Tasklist
  #tasklist-button {
    padding: 0 4px;
    @extend button.flat;
    @extend %underscores;
  }

  &.vertical #tasklist-button { min-height: 32px; }

  // Icon Tasklist
  button.flat.launcher {
    padding: 0;
    @extend button.flat;
    @extend %underscores;

    // for indicator colors
    &:not(:checked) {
      color: $fg_color;

      &:hover, &:active { color: rgba($fg_color, 0.8); }

      &:disabled { color: rgba($fg_color, 0.5); }
    }
  }

  .unpinned button.flat.launcher,
  .pinned button.flat.launcher.running { @extend %underscores:checked; }
}

%underscores {
  @each $pos, $b_pos, $b_wid in (top,    center calc(1px),        2 0 0 0 / 2px 0 0 0),
                                (bottom, center calc(100% - 1px), 0 0 2 0 / 0 0 2px 0),
                                (left,   calc(1px) center,        0 0 0 2 / 0 0 0 2px),
                                (right,  calc(100% - 1px) center, 0 2 0 0 / 0 2px 0 0) {
    .#{$pos} & {
      & {
        border-image: radial-gradient(circle closest-corner at #{$b_pos},
                                      currentColor 0%,
                                      transparent 0%)
                                      0 0 0 0 / 0 0 0 0;
      }

      &:checked {
        border-image: radial-gradient(circle closest-corner at #{$b_pos},
                                      currentColor 100%,
                                      transparent 0%)
                                      #{$b_wid};
      }
    }
  }
}

frame.raven-frame > border {
  border-style: none;
  box-shadow: 0 0 5px 0 if($variant == 'light', opacify($_wm_border, 0.15), opacify($_wm_border, 0.1)),
              0 0 8px 0 if($variant == 'light', opacify($_wm_border, 0.15), opacify($_wm_border, 0.1));
}

$pos_list: ((top, bottom), (bottom, top), (left, right), (right, left));

@each $pos, $b_pos in $pos_list {
  // Panel borders
  // .#{$pos} .budgie-panel { border-#{$b_pos}: 1px solid $borders_color; }

  // Raven borders
  .#{$pos} frame.raven-frame > border {
    margin-#{$b_pos}: 32px;
    // border-#{$b_pos}: 1px solid $borders_color;
  }

  // Shadows
  // .#{$pos} .shadow-block { background-image: linear-gradient(to $b_pos, $borders_color, transparent); }
}

// Raven
.raven {
  background-color: rgba($bg_color, 0.95);

  // for >=10.4
  > box { margin-bottom: -10px; }

  // for <10.4
  > stack { margin-bottom: -10px; }

  // > stack > box:last-child > stack { margin-top: -6px; }

  stackswitcher.linked > button {

    &:checked { }
  }

  .raven-header {
    min-height: 36px;
    padding: 3px;

    &:not(.top) {
      margin-top: -6px; // remove extra spaces, but not perfect :(

      button {
        @extend %budgiebutton.flat;
        min-height: 28px;
        min-width: 28px;
        margin: 0;
        padding: 0;

        &.image-button {
          border-radius: 100px;
          -gtk-outline-radius: 100px; }
      }
    }

    &.top {
      padding: 2px 12px;
//      background-color: rgba($bg_color, 0.95);
      color: $fg_color;

      stackswitcher button {
        margin: -6px 0;
        min-height: 26px;
      }

      // for <10.4
      button.image-button {
        &:dir(ltr) { margin-right: 2px; }
        &:dir(rtl) { margin-left: 2px; }
      }

      // for <10.4
      > image { margin: 0 8px; }

      // for <10.4
      > label {
        margin: 0 -8px;
        font-weight: bold;
      }
    }

    &.bottom { border-top: 1px solid $borders_color; }
  }

  viewport.frame .raven-header { margin-top: -8px; }

  .expander-button {
    border-radius: 100px;
    -gtk-outline-radius: 100px; }

  .raven-background {
    border-style: solid none;
    border-width: 1px;
    border-color: $borders_color;
    background-color: $base_color;

    &.middle { border-bottom-style: none; } // applet background between two headers

    // for <10.4
    &.frame { border-style: solid none; }

    > overlay > widget > image { color: gtkalpha(currentColor, 0.12); }

    // for <10.4
    grid > label:first-child { min-height: 26px; } // workaround to fix vertical-align

    // for <10.4
    spinbutton:not(.vertical) { @extend entry.flat; }

    // for <10.4
    button.combo { }
  }

  scrolledwindow.raven-background { border-bottom-style: none; }

  // for <10.4
  .raven-header.top + .raven-background {
    border-style: none;
    background-color: $selected_bg_color;
    color: $selected_fg_color;

    stackswitcher button { margin: -4px 0; }
  }

  .powerstrip button.image-button {
    min-height: 28px;
    min-width: 28px;
    margin: 0 4px;
    padding: 6px;
  }

  .option-subtitle { font-size: smaller; }
}

// Calendar
calendar.raven-calendar {
  margin: 2px 0;
  padding: 2px;
  border-style: none;
  background-color: transparent;

  &:selected {
    border-radius: 3px;
    background-color: $selected_bg_color;
  }
}

// MPRIS Applet
.raven-mpris {
  background-color: rgba(black, 0.5);
  color: $selected_fg_color;

  label { min-height: 24px; }

  button.image-button {
    padding: 8px;

    @extend %budgiebutton.flat;
  }
}

// Notifications
.budgie-notification-window {
    background-color: transparent;
    background-image: none;
    border-radius: $wm_radius;
}

.budgie-notification {
  .notification-title { font-size: 120%; }

  .notification-body { @extend .dim-label; }
}

// On Screen Display in Budgie
.budgie-osd-window {
  @extend .budgie-notification-window;
}

// Internal part of the OSD
.budgie-osd {
  .budgie-osd-text { font-size: 120%; }
}

// Alt+tab switcher in Budgie
.budgie-switcher-window {
  @extend .budgie-notification-window;
}

// Internal part of the Switcher
.budgie-switcher {
  @extend .budgie-notification;
}

.drop-shadow {
  margin: 5px 9px;
  padding: 8px;
  border-radius: $wm_radius;
  box-shadow: 0 5px 5px 0 transparent, 0 8px 15px 0 transparent,
              0 3px 3px 0 if($variant == 'light', opacify($_wm_border, 0.15), opacify($_wm_border, 0.1));

  background-color: rgba($bg_color, 0.95);

  button { @extend %budgiebutton.flat; }

  .linked > button { border-radius: $bt_radius; }
}

%budgie_dialog {
  border-radius: $wm_radius;
  background-color: $bg_color;
  &.background {border-radius: $wm_radius; }
  decoration { border-radius: $wm_radius; }
}

// Session Dialog
.budgie-session-dialog {
  @extend %budgie_dialog;

  label:not(:last-child),
  .dialog-title { font-size: 120%; }

  .linked.horizontal > button {
    padding: 8px 16px;
    border: none;
    border-top: 1px solid $borders_color;
    border-radius: 0;

    &:first-child { border-bottom-left-radius: $wm_radius; }
    &:last-child { border-bottom-right-radius: $wm_radius; }
  }

  .linked.horizontal > button:not(.suggested-action):not(.destructive-action) {

      &:hover {
        @include button(flat-hover);
        border-color: $borders_color;
        transition: $button_transition;
       }

      &:active, &:checked {
        @include button(flat-active);
        border-color: $borders_color;
        text-shadow: $text_shadow;
      }
    }
}

// PolKit Dialog
.budgie-polkit-dialog {
  @extend %budgie_dialog;

  .message { color: gtkalpha(currentColor, 0.6); }

  .failure { color: $destructive_color; }
}

// Run Dialog
.budgie-run-dialog {
  @extend %budgie_dialog;

  background-color: $base_color;

  entry.search {
    font-size: 120%;
    padding: 6px 12px;
    box-shadow: inset 0 1px $highlight;
    background-color: transparent;
  }

  list .dim-label { opacity: 1; }

  scrolledwindow { border-top: 1px solid $borders_color; }
}
